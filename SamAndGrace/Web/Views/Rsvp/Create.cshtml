@using BotDetect.Web.UI.Mvc;
@model Web.Models.Rsvp

<div class="row">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <fieldset>
                <h4>Rsvp</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Your name(s)")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Your email")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Attending, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Able to attend?")
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Attending)
                            @Html.ValidationMessageFor(model => model.Attending, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.RequiresTransport, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Require transport from church to Tythe Barn?")
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.RequiresTransport)
                            @Html.ValidationMessageFor(model => model.RequiresTransport, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DietryRequirements, htmlAttributes: new { @class = "control-label col-md-2" }, labelText: "Dietary Requirements")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DietryRequirements, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DietryRequirements, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="control-label col-md-2">
                        <b>
                            Please enter captcha string
                        </b>
                    </div>
                    <div class="col-md-10">
                        @{ var sampleCaptcha = new MvcCaptcha("SampleCaptcha"); }
                        @Html.Captcha(sampleCaptcha)
                        @Html.TextBox("CaptchaCode")
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="RSVP" class="btn btn-default" />
                    </div>
                </div>
            </fieldset>
        </div>
    }
</div>